USE ga4w20;

DROP TABLE IF EXISTS BookAuthor;
DROP TABLE IF EXISTS BookSale;
DROP TABLE IF EXISTS Answer;
DROP TABLE IF EXISTS Survey;
DROP TABLE IF EXISTS Author;
DROP TABLE IF EXISTS Sale;
DROP TABLE IF EXISTS Review;
DROP TABLE IF EXISTS Account;
DROP TABLE IF EXISTS Tax;
DROP TABLE IF EXISTS Book;
DROP TABLE IF EXISTS Publisher;
DROP TABLE IF EXISTS RSS;
DROP TABLE IF EXISTS Ads;

CREATE TABLE Publisher(
	PublisherID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	Name VARCHAR(200)
);

CREATE TABLE Book(
	BookID INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
	ISBN VARCHAR(14) NOT NULL DEFAULT '',
    Title VARCHAR(150) NOT NULL DEFAULT '',
    Pages VARCHAR(4) NOT NULL DEFAULT '',
    Genre VARCHAR(8) NOT NULL DEFAULT '',
    Synopsis VARCHAR(2000) NOT NULL DEFAULT '',
    PublisherID INT NOT NULL,
    PubDate DATE NOT NULL,
    WholeSalePrice DOUBLE(6, 2) NOT NULL DEFAULT 0.0,
    ListPrice DOUBLE(6, 2) NOT NULL DEFAULT 0.0,
    SalePrice DOUBLE(6, 2) NOT NULL DEFAULT 0.0,
    DateEntered DATE NOT NULL,
    EBook CHAR(1) NOT NULL DEFAULT 1,
    RemovalStatus CHAR(1) NOT NULL DEFAULT 0,
    ImagePath VARCHAR(50) NOT NULL,
    FOREIGN KEY (PublisherID) REFERENCES Publisher(PublisherID)
);

CREATE TABLE Survey(
	ServeyID INT(2) PRIMARY KEY AUTO_INCREMENT,
	Question VARCHAR(250) NOT NULL DEFAULT ''
);

CREATE TABLE Answer(
	AnswerID INT PRIMARY KEY AUTO_INCREMENT,
	Answer VARCHAR(250) DEFAULT '',
	ServeyID INT(2) NOT NULL, 
	Vote INT(4) NOT NULL DEFAULT 0,
	FOREIGN KEY (ServeyID) REFERENCES Survey(ServeyID)
);

CREATE TABLE Author(
	AuthorID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	FName VARCHAR(45) NOT NULL DEFAULT '',
	LName VARCHAR(45) NOT NULL DEFAULT ''
);  

CREATE TABLE RSS(
	RssID INT PRIMARY KEY AUTO_INCREMENT,
	Link VARCHAR(100) NOT NULL DEFAULT '',
    Active INT NOT NULL DEFAULT 0
);

CREATE TABLE Ads(
	AdID INT PRIMARY KEY AUTO_INCREMENT,
	Image VARCHAR(100) NOT NULL DEFAULT '',
	Redirect VARCHAR(100) NOT NULL DEFAULT '',
        AdType INT NOT NULL DEFAULT 0,
        ActiveStatus INT NOT NULL DEFAULT 0
);

CREATE INDEX ISBNIndex ON Book(ISBN);

CREATE TABLE BookAuthor (
	BookAuthorID INT PRIMARY KEY AUTO_INCREMENT,
	ISBN VARCHAR(14) NOT NULL,
	AuthorID INT NOT NULL,
	FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON DELETE CASCADE,
	FOREIGN KEY (AuthorID) REFERENCES Author(AuthorID) ON DELETE CASCADE
);

CREATE TABLE Account (
	AccountID INT AUTO_INCREMENT PRIMARY KEY,
	Email VARCHAR (40) NOT NULL UNIQUE DEFAULT '',
	FName VARCHAR (40) NOT NULL DEFAULT '',
	LName VARCHAR (40) NOT NULL DEFAULT '',
	HashedPassword VARCHAR (255) NOT NULL,
	Salt VARCHAR (255) NOT NULL,
	Address VARCHAR (100) NOT NULL DEFAULT '',
	Street VARCHAR (40) NOT NULL DEFAULT '',
	Province VARCHAR (2) NOT NULL,
	PostalCode VARCHAR (6) NOT NULL DEFAULT '',
	City VARCHAR (40) NOT NULL DEFAULT '',
	Telephone VARCHAR (12) NOT NULL DEFAULT '',
	Cellphone VARCHAR (12) NOT NULL DEFAULT '',
	CompanyName VARCHAR (40) NOT NULL DEFAULT '',
    ManagerStatus CHAR(1) DEFAULT 0
) ;

CREATE TABLE Tax(
	TaxID INT AUTO_INCREMENT PRIMARY KEY,
    Province CHAR(2),
    GST INT NOT NULL,
    PST INT NOT NULL,
    HST INT NOT NULL
);

CREATE TABLE Review(
    ReviewID INT AUTO_INCREMENT PRIMARY KEY,
    ISBN VARCHAR(14) NOT NULL,
    AccountID INT NOT NULL,
    ReviewText VARCHAR(750) NOT NULL DEFAULT '',
    PostDate TIMESTAMP NOT NULL,
    Rating INT NOT NULL DEFAULT 0,
    Approval CHAR(1) DEFAULT 0 NOT NULL,
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN) ON DELETE CASCADE,
    FOREIGN KEY (AccountID) REFERENCES Account(AccountID) ON DELETE CASCADE
);

CREATE TABLE Sale(
    SaleID INT AUTO_INCREMENT PRIMARY KEY,
    AccountID INT NOT NULL,
    Price DOUBLE(6,2) NOT NULL DEFAULT 0.0,
    SaleDate DATE NOT NULL,
	FOREIGN KEY (AccountID) REFERENCES Account(AccountID)
);

CREATE INDEX BookSaleIndex ON Sale(SaleID);

CREATE TABLE BookSale(
	BookSaleID INT AUTO_INCREMENT PRIMARY KEY,
    SaleID INT NOT NULL,
    ISBN VARCHAR(14) NOT NULL,
	FOREIGN KEY (SaleID) REFERENCES Sale(SaleID),
    FOREIGN KEY (ISBN) REFERENCES Book(ISBN)
);

